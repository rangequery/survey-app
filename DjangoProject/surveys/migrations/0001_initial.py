# Generated by Django 5.2.1 on 2025-05-13 11:00

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('help_text', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('required', models.BooleanField(default=True)),
                ('validation_regex', models.CharField(blank=True, max_length=500)),
                ('validation_message', models.CharField(blank=True, max_length=255)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('conditional_logic', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('has_options', models.BooleanField(default=False)),
                ('has_multiple_answers', models.BooleanField(default=False)),
                ('template_name', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_default', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='option_images/')),
                ('extra_info', models.TextField(blank=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='surveys.question')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='question_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surveys.questiontype'),
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=True)),
                ('allow_anonymous', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('access_code', models.CharField(blank=True, max_length=20, null=True)),
                ('max_responses', models.PositiveIntegerField(blank=True, null=True)),
                ('theme', models.JSONField(blank=True, default=dict)),
                ('success_message', models.TextField(blank=True, default='Thank you for completing this survey!')),
                ('redirect_url', models.URLField(blank=True, null=True)),
                ('show_progress', models.BooleanField(default=True)),
                ('randomize_questions', models.BooleanField(default=False)),
                ('one_question_per_page', models.BooleanField(default=False)),
                ('allow_save_and_continue', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Surveys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('completion_time', models.DurationField(blank=True, null=True)),
                ('resume_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('last_page', models.PositiveIntegerField(default=1)),
                ('respondent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_responses', to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.survey')),
            ],
            options={
                'verbose_name': 'Response',
                'verbose_name_plural': 'Responses',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.survey'),
        ),
        migrations.CreateModel(
            name='SurveyStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_responses', models.PositiveIntegerField(default=0)),
                ('complete_responses', models.PositiveIntegerField(default=0)),
                ('average_completion_time', models.DurationField(blank=True, null=True)),
                ('question_stats', models.JSONField(default=dict)),
                ('survey', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='surveys.survey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data', models.TextField(blank=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.question')),
                ('selected_options', models.ManyToManyField(blank=True, related_name='answers', to='surveys.questionoption')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.response')),
            ],
            options={
                'unique_together': {('response', 'question')},
            },
        ),
        migrations.CreateModel(
            name='SurveyShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_view_results', models.BooleanField(default=True)),
                ('can_delete', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True)),
                ('accepted', models.BooleanField(default=False)),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_surveys', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_surveys', to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='surveys.survey')),
            ],
            options={
                'unique_together': {('survey', 'shared_with')},
            },
        ),
    ]
